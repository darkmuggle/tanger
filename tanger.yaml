apiVersion: template.openshift.io/v1
kind: Template
labels:
  app: tanger-ephemeral
  template: tanger-ephemeral-template
message: Ephemeral Tang Instance
metadata:
  annotations:
    openshift.io/display-name: Tanger (Ephemeral)
    tags: tanger
  name: tanger-ephemeral
objects:

- apiVersion: v1
  kind: Route
  metadata:
    annotations:
      haproxy.router.openshift.io/timeout: 4m
      template.openshift.io/expose-uri: http://{.spec.host}{.spec.path}
    name: ${TANGER_SERVICE_NAME}
  spec:
    tls:
      insecureEdgeTerminationPolicy: Redirect
      termination: edge
    to:
      kind: Service
      name: ${TANGER_SERVICE_NAME}

- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    annotations:
      template.alpha.openshift.io/wait-for-ready: "true"
    name: ${TANGER_SERVICE_NAME}
  spec:
    replicas: 1
    selector:
      name: ${TANGER_SERVICE_NAME}
    strategy:
      type: Recreate
    template:
      metadata:
        labels:
          name: ${TANGER_SERVICE_NAME}
      spec:
        containers:
        - capabilities: {}
          env:
            - name: PORT
              value: "8180"
          image: tanger:latest
          imagePullPolicy: IfNotPresent
          name: tanger
          resources:
            limits:
              memory: "2Gi"
              cpu: "1000m"
          securityContext:
            capabilities: {}
            privileged: false
          volumeMounts:
            - mountPath: /var/db/tang
              name: db-data
            - mountPath: /var/cache/tang
              name: cache-data
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        volumes:
         - name: db-data
           emptyDir:
             medium: ""
         - name: cache-data
           emptyDir:
             medium: ""
    triggers:
    - type: ConfigChange

- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      service.alpha.openshift.io/dependencies: '[{"name": "${TANGER_SERVICE_NAME}", "namespace": "", "kind": "Service"}]'
      service.openshift.io/infrastructure: "true"
    name: ${TANGER_SERVICE_NAME}
  spec:
    ports:
    - name: web
      nodePort: 0
      port: 80
      protocol: TCP
      targetPort: 8180
    selector:
      name: ${TANGER_SERVICE_NAME}
    sessionAffinity: None
    type: ClusterIP

# Import tanger's image
- apiVersion: "image.openshift.io/v1"
  kind: ImageStream
  metadata:
    name: fedora-min
    label:
      app: tanger
      template: tanger-template
  spec:
    failedBuildHistoryLimit: 1
    successfulBuildsHistoryLimit: 1
    lookupPolicy:
      local: true
    tags:
      - name: "32"
        from:
          kind: DockerImage
          name: registry.fedoraproject.org/fedora-minimal:32
        importPolicy:
          scheduled: true

# Import tanger's image
- apiVersion: "image.openshift.io/v1"
  kind: ImageStream
  metadata:
    name: tanger
    label:
      app: tanger
      template: tanger-template
  spec:
    failedBuildHistoryLimit: 1
    successfulBuildsHistoryLimit: 1
    lookupPolicy:
      local: true
    tags:
      - name: import
        from:
          kind: DockerImage
          name: quay.io/behoward/tanger
        importPolicy:
          scheduled: true

# Build Tanger locally
- apiVersion: build.openshift.io/v1
  kind: BuildConfig
  metadata:
    labels:
      app: tanger-ephemeral
    name: tanger
  spec:
    lookupPolicy:
      local: true
    output:
      to:
        kind: ImageStreamTag
        name: tanger:latest
    postCommit: {}
    runPolicy: Serial
    source:
      git:
        ref: "master"
        uri: "https://github.com/darkmuggle/tanger"
      type: Git
    strategy:
      dockerStrategy:
        noCache: true
        from:
          kind: ImageStreamTag
          name: fedora-min:32
      type: Docker
      dockerfilePath: Dockerfile


parameters:
- description: The name of the OpenShift Service exposed for the tanger container.
  displayName: tanger Service Name
  name: TANGER_SERVICE_NAME
  value: tanger
- description: Name of the ImageStreamTag to be used for the tanger image.
  displayName: tanger ImageStreamTag
  name: TANGER_IMAGE_STREAM_TAG
  value: tanger:latest
